== pdxruby.org development todo ==

Notes:

1) If you complete one of these, please remove it from the list. 

2) If you want to "claim" a task (i.e. you plan on doing it shortly), 
   put your name in [square brackets] at the end of the event.

_Spamming_
  
  - All members are notified of new events

  - Members can ask to have their password emailed 
    to them if they provide their email address

_Other_

  - Bug in location view code when editing an event. Prevented me from 
    adding minutes for the April Monthly. The whole location part of the
    event form really needs some TLC. If nothing else, it is confusing.

  - Somewhere, it would be nice to have the SVN revision (maybe in the footer for each page).
    This way, we would be able to easily see what revision the dev.pdxruby.org is running.
    	- the deploy script may make this unnecessary
	- a post-commit hook that dumps the revision number into a file in /public/
	  would be one solution

  - Cache index page. How should this be done? Periodically or when some set of DB modifications
    occurs (i.e. when scripts/feeder runs, and when an event is added or deleted or modified). Ideally
    the index should be able to handle a slashdotting.

  - User should be able to delete their own account...

_Cosmetic_

  - Make forms prettier (i.e. make input sizes more appropriate)
  	- on Edit/New Event, when existing location is selected, alternative location
	  inputs can be greyed-out or dissapeared (via some Javascript magic).
    - ajaxify visibility of password fields on members/edit page
 
  - Make timestamps prettier (this and following 2 items suggested by bleything on dev-list)

  - If there is no RSVP comment, don't try to show it

  - Article list enhancements (sort by author, etc.)

_Input Validation_
  
  - more??? can you think of any?

_Testing_
  
  - write functional tests for application.rb
  - write functional tests for articles_controller.rb
  - write functional tests for events_controller.rb
  - write functional tests for feedbacks_controller.rb
  - write functional tests for index_controller.rb
  - write functional tests for locations_controller.rb
  - write functional tests for participants_controller.rb
  - write unit tests for article.rb
  - write unit tests for event.rb
  - write unit tests for feedback.rb
  - write unit tests for participant.rb

_Feeds_

  - It would be nice if the feeds could be moderated by people. If one
    person posts a bunch of off-topic entries, then the last 5 isn't very
    Ruby-based. Currently, a user can delete his or her own articles, which is probably
    good-enough for a little while.
    	- Perhaps a field should be added to the articles relation
	  that contains the number of 'nay' votes. When some threshold
	  is reached, the article is not shown (but not deleted - if
	  it were, the feeder would just grab it again next run)

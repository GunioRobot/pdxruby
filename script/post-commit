#!/usr/bin/env ruby
# post-commit - a hook to send an email to the development list
# author(s): Robby Russell, Ben Bleything, and John Labovitz of the 
# Portland Ruby Brigade - PDX.rb- http://www.pdxruby.org/
#
# This file should be placed in the repository's hooks directory

require 'time'
require 'optparse'
require 'ostruct'
require 'rmail'
require 'net/smtp'
require 'pp'


module Subversion

  class Browser

    attr_accessor :path
    attr_accessor :repos

    def initialize(path)
      @path = File.expand_path(path)
      # guess what the repository name is
      @repos = path.split(/\//).last
    end

    def info(revision)
      cmd = "svnlook info --revision #{revision} #{@path}"
      author, timestamp, log_size, log = `#{cmd}`.split(/\n/, 4)
      author = '(anonymous)' if author.empty?
      cmd = "svnlook changed --revision #{revision} #{@path}"
      changed = `#{cmd}`
      info = OpenStruct.new
      info.author = author
      info.revision   = revision.to_i
      info.timestamp  = Time.parse(timestamp)
      info.repository = @repos
      info.log        = log.chomp
      info.changed    = changed
      info
    end

  end
  
end


class PostCommitOptionParser
  
  def self.parse(args)
    
    options = OpenStruct.new
    options.sender_email = RMail::Address.parse('svn@localhost').first
    options.recipient_email = nil
    options.smtp_host = 'localhost'
    
    OptionParser.accept(RMail::Address, /(^.*?@.*$)/) do |address, *more|
      RMail::Address.parse(address).first
    end

    opts = OptionParser.new do |opts|
      
      opts.banner = "Usage: #{$0} [options] repository-path revision-number"
      opts.separator ""
      opts.separator "Options:"
      
      opts.on('-f ADDRESS', '--from ADDRESS', 
              "Set email from address",
              "Default: " + (options.sender_email || 'none'),
              RMail::Address) do |address|
        options.sender_email = address
      end

      opts.on('-t ADDRESS', '--to ADDRESS',
              "Set email to address",
              "Default: " + (options.recipient_email || 'none'),
              RMail::Address) do |address|
        options.recipient_email = address
      end

      opts.on('-s HOST', '--smtp HOST',
              "Set SMTP host",
              "Default: " + options.smtp_host) do |host|
        options.smtp_host = host
      end
      
      opts.on('-h', '--help', "Show this message") do
        puts opts
        exit
      end
      
    end
    
    begin
      opts.parse!(args)
    rescue OptionParser::ParseError => e
      puts e
      puts
      puts opts
      exit
    end
    
    unless options.sender_email && options.recipient_email
      puts opts
      exit
    end

    # Okay.  So we get two args from svn.
    #
    # [1] - repo path
    # [2] - revision number
    #
    # We then use this information to gather relevant data about the commit
    # and do with it as we please.
    
    unless args.length == 2
      puts opts
      exit
    end

    options.path = args[0]
    options.revision = args[1].to_i
    
    options
    
  end
  
end


options = PostCommitOptionParser.parse(ARGV)

browser = Subversion::Browser.new(options.path)

rev_info = browser.info(options.revision)

msg = RMail::Message.new
msg.header.from = options.sender_email
msg.header.to = options.recipient_email
msg.header.subject = "COMMIT to '#{rev_info.repository}' ##{rev_info.revision} by #{rev_info.author}"
msg.header.date = rev_info.timestamp
msg.body = <<END
REV: #{rev_info.revision}
#{rev_info.log}

-----

#{rev_info.changed}
END

Net::SMTP.start(options.smtp_host) do |smtp|
  smtp.send_message(msg,
                    options.sender_email.address,
                    options.recipient_email.address)
end
